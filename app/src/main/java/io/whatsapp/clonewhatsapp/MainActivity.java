package io.whatsapp.clonewhatsapp;import android.content.DialogInterface;import android.content.Intent;import android.support.v4.content.ContextCompat;import android.support.v4.view.ViewPager;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.ValueEventListener;import io.whatsapp.clonewhatsapp.adapter.TabAdapter;import io.whatsapp.clonewhatsapp.base64.Codificacao;import io.whatsapp.clonewhatsapp.firebase.ConfigFireBase;import io.whatsapp.clonewhatsapp.helpers.Preferencias;import io.whatsapp.clonewhatsapp.helpers.SlidingTabLayout;import io.whatsapp.clonewhatsapp.model.Contato;import io.whatsapp.clonewhatsapp.model.Usuario;public class MainActivity extends AppCompatActivity {    private Button btnSair;    private FirebaseAuth auth;    private Toolbar toolbar;    private SlidingTabLayout slider;    private ViewPager vp;    private String uidContato;    private DatabaseReference db;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        auth = ConfigFireBase.getFirebaseAuth();        toolbar = (Toolbar) findViewById(R.id.toolbar);        slider = (SlidingTabLayout) findViewById(R.id.slide_tabs);        vp = (ViewPager) findViewById(R.id.vp);        toolbar.setTitle("WhatsApp");        setSupportActionBar(toolbar);        //configurando o slider para preencher toda a tela        slider.setDistributeEvenly(true);        slider.setSelectedIndicatorColors(ContextCompat.getColor(this, R.color.colorAcess ));        TabAdapter tabAdapter = new TabAdapter( getSupportFragmentManager());        vp.setAdapter( tabAdapter );        slider.setViewPager( vp );    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater inflater = getMenuInflater();        inflater.inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()){           case R.id.item_sair:               delogarUser();               return true;           case R.id.item_configuracao:               return true;           case R.id.item_add:               abrirCadastro();               return true;           default:               return super.onOptionsItemSelected(item);        }    }    private void delogarUser(){        auth.signOut();        Intent intent = new Intent(MainActivity.this, LoginActivity.class);        startActivity( intent );        finish();    }    private void abrirCadastro(){        AlertDialog.Builder adb = new AlertDialog.Builder(MainActivity.this);        adb.setTitle("Novo Contato");        adb.setMessage("E-mail do usuário");        adb.setCancelable(false);        final EditText editText = new EditText(MainActivity.this);        adb.setView( editText );        //config button        adb.setPositiveButton("Cadastrar", new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialogInterface, int i) {                String emailUser = editText.getText().toString();                //validar                if(emailUser.isEmpty()){                    Toast.makeText(MainActivity.this, "Preencha o e-mail", Toast.LENGTH_LONG).show();                }else{                    //verificando se o e-mail já existe na base de dados do firebase                    uidContato = Codificacao.codificacaoBase64( emailUser );                    //recuperando                    db = ConfigFireBase.getFirebase();                    db = db.child("usuarios").child( uidContato );                    db.addListenerForSingleValueEvent(new ValueEventListener() {                        @Override                        public void onDataChange(DataSnapshot dataSnapshot) {                            if( dataSnapshot.getValue() != null ){                                //recuperar dados do contato salvado                                Usuario userContato = dataSnapshot.getValue( Usuario.class );                                //auth.getCurrentUser().getEmail();                                Preferencias p = new Preferencias(MainActivity.this);                                String identificadorusuarioLogado = p.getIdentificador();                                db = ConfigFireBase.getFirebase();                                db = db.child("contatos").child(  identificadorusuarioLogado ).child( uidContato );                                Contato contato = new Contato();                                contato.setIdentificarUsuario( uidContato );                                contato.setEmail( userContato.getEmail() );                                contato.setNome( userContato.getNome() );                                db.setValue( contato );                            }else{                                Toast.makeText(MainActivity.this, "Usuário não possui cadastro", Toast.LENGTH_LONG).show();                            }                        }                        @Override                        public void onCancelled(DatabaseError databaseError) {                        }                    });                }            }        });        adb.setNegativeButton("CANCELAR", new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialogInterface, int i) {            }        });        adb.create();        adb.show();    }}